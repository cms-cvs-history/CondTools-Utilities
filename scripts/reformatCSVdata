#!/usr/bin/env python
###################################################
#add double quotes around CSV data lines and fields
###################################################
import sys, string, fpformat
from optparse import OptionParser

class reformatCSVdata:
    def __init__(self):
        self.parser = OptionParser()
        self.inputfile = None
        self.outputfile = None
        self.fieldTypes=[]
        self.buffer=[]
        self.parsecmdln()
        
    def parsecmdln(self):
        """parse commandline arguments
        """
        usage = "usage: \%prog InputFile"
        usage += "\n"
        usage +="arguments:\n"
        usage +="  InputFile: file to be modified\n"

        self.parser = OptionParser(usage) 
        
        (options, args) = self.parser.parse_args()
        if len(args) != 1:
          self.parser.error("Please specify the input file name")
        self.inputfile=args[0]
        
    def readFile(self):
        """read input file into buffer, build field map"""
        rf=open(self.inputfile, 'r')
        self.buffer=rf.readlines()
        rf.close()
    def writeFile(self,toWrite):
        """dump parsed result into output file"""
        self.outputfile=str(self.inputfile)+'.new'
        outf=open(self.outputfile,'w')
        outf.writelines(toWrite)
        outf.close()
    def isBlank(self, inputline):
        if inputline.find(',') == -1:
            return 'true'
        return 'false'
    def process(self):
        """if CHAR fiedd has no quotes, put quotes; if float field has only 0, turn it into 0.0
        """
        result=[]
        counter = 0
        for line in self.buffer:
            if self.isBlank(line)=='true':
                continue
            counter=counter+1
            if counter==1:
                result.append((line.strip()+'\n'))
                continue
            if counter==2:
                self.fieldTypes=line.strip().split(',')
                result.append((line.strip()+'\n'))
                continue
            newfields=[]
            fields=line.strip().split(',')
            fidx=0
            for f in fields:
              ff=f
              if self.fieldTypes[fidx]=='CHAR' and f.find('\"')==-1:
                    ff='"'+str(f)+'"'
              elif self.fieldTypes[fidx]=='FLOAT' and f=='0':
                    ff=str(float(f))
              fidx=fidx+1
              newfields.append(ff)
            result.append((','.join(newfields))+'\n')
        return result
    
if __name__ == "__main__":
    a = reformatCSVdata()
    a.readFile()
    result=a.process()
    a.writeFile(result)
